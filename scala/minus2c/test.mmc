extern main {}
    => Function(Vector(Storage(extern)),Identifier(main),ListNone,ø)

extern int main {}
    => Function(Vector(Storage(extern), Type(int)),Identifier(main),ListNone,ø)

extern int auto main {}
    => Function(Vector(Storage(extern), Type(int), Storage(auto)),Identifier(main),ListNone,ø)

main {}
    => Function(Vector(),Identifier(main),ListNone,ø)

main() {}
    => Function(Vector(),Identifier(main),ListOf(Vector()),ø)

int main() {}
    => Function(Vector(Type(int)),Identifier(main),ListOf(Vector()),ø)

int main(void) {}
    => Function(Vector(Type(int)),Identifier(main),ListVoid,ø)

int main(int a) {}
    => Function(Vector(Type(int)),Identifier(main),ListOf(Vector((Type(int),Identifier(a)))),ø)

int main(int a, int b) {}
    => Function(Vector(Type(int)),Identifier(main),ListOf(Vector((Type(int),Identifier(a)), (Type(int),Identifier(b)))),ø)

int main(int a, int b, int c) {}
    => Function(Vector(Type(int)),Identifier(main),ListOf(Vector((Type(int),Identifier(a)), (Type(int),Identifier(b)), (Type(int),Identifier(c)))),ø)

int main(int a, void) {}
    => Error (not type and identifier)

int main(a, b) {}
    => Error (not type and identifier)

function main(void) { int doubleit(int a) { return a + a; } return doubleit; }
function main(int a, int b) { int sum(int x, int y) { return x + y; } return sum(a, b); }
void main(void) { if(1) {} }
void main(void) { if(1) {};;;; }
void main(void) { if(1) {} else {} }
int main(void) { return 1 + 2; }
void main(void) { return; }
void loop(void) { while(1) { break; } }
void loop(void) { while(1) {} }
int main(int a) { return a + 1; }
int main(int a) { return a + a; }
int main(int* a) { return *a + *a; }
return 1 + 1;
int o = 101;
int o = "Hello, World!";
int main() int a = 0; {}

int (*foo)(int, int); => legit fpointer declaration     | NOT_IN_SCOPE
int (*foo)(int a, int b); => legit fpointer declaration | NOT_IN_SCOPE

int foo(int, int) {} => error, no param name
int (*foo)(int, int) {} => error, expected ';' after top level declarator     | NOT_IN_SCOPE
int (*foo)(int a, int b) {} => error, expected ';' after top level declarator | NOT_IN_SCOPE

int *foo(int, int); => legit f declaration      | NOT_IN_SCOPE
int *foo(int a, int b); => legit f declaration  | NOT_IN_SCOPE
int foo(int, int); => legit f declaration
int foo(int a, int b); => legit f declaration

int *foo(int, int) {} => legit f definition | NOT_IN_SCOPE

|>
    int a, b, ans = 0;
    int main(void) {
        ans = a + b;
        return ans;
    }

|>
    int main(void) {
        int a, b, ans;
        a = 1;
        b = 2;
        ans = a + b;
        return ans;
    }

    int main(void) {
        int a, b, ans;
        a = 1;
        b = 2;
        ans = a = b;
        return ans;
    }

|>
    int main(void) { return 1 + 2; }

|>
    int main(void) { { int a = 0; } return a + 1; }

|>
    int main(void) { int a = 0; return a + 1; }

|>
    int main(int a) {
        a = 0;
        return a + 1;
    }

|>
    int main(void) {}
        => body: Block(ø)

    int main(void) { {} {} }
        => body: Block(Node2(;,Block(ø),Block(ø))))

    int main(void) { {} }
        => body: Block(Block(ø)))

    int main(void) { ;; }

    int main(void) { 1, 2, 3; }

int main(void) {
    int a = 0;
    return a + 1;
}

int main(void) {
    int a, b = 0;
    return a + b;
}

int main(void) {
    int a, b, c = 0;
    int d, e = 1;
    return 0;
}

|> BAD

    int main(void) {
        int a, b, c = 0;
        int foo(int);
        void foo(int);
        return 0;
    }

    int main(void) {
        int a, b, b = 0;
        return 0;
    }

    int main(void) {
        int a, b = 0;
        int b(void);
        return 0;
    }

|> GOOD

    int main(void);
    int x = 0;
    int main(void) {
        int foo(int);
        int a, b = 0;
        int foo(int) {
            return 0;
        }
        return 0;
    }

    int x = 0;
    int main(void) {
        int foo(int);
        int a, b = 0;
        return 0;
    }
    int foo(int) {
        return 0;
    }

int main(void) {
    a, b, c = 0;
    return a + b + c;
}

int a, b, c, d;
int foo(void) {
    a = 10, b = 1 * *50, c = b, d = 20;
}
int main(void) {
    a;
    return 0;
}

int main(void) {
    int a = 0;
    int b = 1;
    return a + b;
}

int main(void) {
    int a = 0;
    int b = 1;
    int c = a + b;
    return a, b, c = 20;
}

int a = 0, b = 0, c = 0;
int main(void) {
    a = 20, b = 20, c = 20;
    return c;
}

int main(void) {
    a = 0;
    return a + 1;
}

int main(void) {
    a;
    return a + 1;
}

int main(void) {
    a, b, c;
    return a + 1;
}

int main(void) {
    int a;
    return a + 1;
}

int main(void) {
    int a = 0;
    if (a == 1) {
        return;
    } else {
        int b = a + 1;
        return b;
    }
}

int main(void) { int a = 0; if (a == 1) { return; } int b = a + 1; return b; }

int a = 0;
int main(void) {
    int a = 0;
    return 0;
}

int a = 0;
int main(void) {
    print_int(25);
    return 0;
}

int main(void) {
    int c;
    int b;
    int a = b = c = 25 + 2 * 5 % 6;
    return 0;
}

int main(void) {
    int c;
    int b;
    int a;
    a = b = c = 25 + 2 * 5 % 6;
}

int main(void) {
    "hello"();
}

int foo(void);
int main(void) {
    int a;
    int b;
    (1 + a - 5, 2 - a / 6, 3 == b, foo());
}

int main(void) {
    int a;
    a + 2;
}

int main(void) {
    int c;
    int b;
    int a;
    a = 6;
    return 0;
}

int main(void) {
    int a;
    int b;
    int c;
    int d;
    a = b = d == c == a == b;
}

int foo(int, int, int);
int main(void) {
    int a;
    int b;
    a = foo(1 == 1 + 1, 2 == 2 + 2, 7 == a == b == 4 + a);
    return a;
}

int foo(int, int, int);
int a = foo(1 + 1, 2 == 3, 3 * 1 / 5);

int bar(int);
int foo(int);
int main(void) {
    foo(bar(1));
}

int foo(int, int, int);
int main(void) {
    1, 2;
    int a = 3 + 4 == 2, b = ---1 % 3;
    a = a == 56;
    int c;
    return foo(1, 2, 3), 3 == 2, c;
}

int main(void) {
    int foo(int, int, int) {
        return 0;
    }
    return foo(0, 0, 0);
}

int main(void) { {} {} {} }

int main(void) {}

int foo(int, int, int);
int b = foo(1 == 1 + 1, 2 == 2 + 2, 3 == 3 + 3);
int main(void) {
    {
        foo(5 + 1 % 7, 4 != 2 + 2, 3 == 3 + 3);
    }
    int a = 9;
    return a = 10;
}

int foo(int, int, int);
int main(void) {
    int a;
    foo(1 == 1 + 1, 2 == 2 + 2, 4 + a);
}

int foo(int);
int main(void) {
    int a;
    foo(a = 4);
}