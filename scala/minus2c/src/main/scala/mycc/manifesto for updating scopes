int a;
int main(void) {
    int b;
    int c;
    {
        int d;
        {
            int x;
        }
    }
    {
        int e;
    }
}

Bindings(data,parent,children)

accumulation:

global := Bindings({},[],[])                | push
main := Bindings({b,c},[global],[])             | push
_d := Bindings({d},[main,global],[])                   | push
_x := Bindings({x},[_d,main,global],[])                     | pop
_d' := Bindings({d},[main,global],[_x])                | pop
main' := Bindings({b,c},[global],[_d'])          | push
_e := Bindings({e},[main',global],[])                  | pop
main'' := Bindings({b,c},[global],[_d',_e])         | pop
global' := Bindings({a},[],[main''])                  | +
global'' := Bindings({a,X},[],[main''])

iteration:

// cursor will perform depth first search

Cursor.mk(global'',[]) // children of global'': [main'']

main''' := Bindings({b,c},[global''],[_d',_e]) // update parent of each child; append

cursor := (global'',[_main''']) | next

Cursor.mk(_main''',[]) // children of _main''': [_d',_e]

_d'' := Bindings({d},[main''',global''],[_x])   // update parent of each child; append
_e' := Bindings({e},[main''',global''],[])  // update parent of each child; append

cursor':= (main''',[_d'',_e']) | next

Cursor.mk(_d'',[_e']) // children of _d'': [_x]

_x' := Bindings({x},[_d'',main''',global''],[]) // update parent of each child; append

cursor'' := (_d',[_x',_e']) | next

Cursor.mk(_x',[_e']) // children of _x': []

cursor''' := (_x',[_e']) | next

Cursor.mk(_e,[]) // children of _e: []

cursor''' := (_e',[]) | next

None