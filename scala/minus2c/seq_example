Sequence(E,List(
    BinaryNode(q,
        Sequence(~,List(
            Singleton(extern),
            Singleton(int)
        )),
        BinaryNode(F,
            TokenString(id,foo),
            Sequence(,,List(
                Singleton(int),
                Singleton(int),
                Singleton(int))
            )
        )
    ),
    BinaryNode(q,
        Singleton(int),
        BinaryNode(=,
            TokenString(id,zz),
            TokenInt(constant,25)
    )),
    BinaryNode(q,
        Singleton(int),
        BinaryNode(=,
            TokenString(id,yy),
            TokenInt(constant,36)
        )
    ),
    BinaryNode(q,
        Singleton(function),
        BinaryNode(=,
            TokenString(id,f),
            TokenString(id,foo)
        )
    ),
    BinaryNode(D,
        BinaryNode(d,
            Singleton(int),
            UnaryNode(V,TokenString(id,main))
        ),
        UnaryNode(B,
            Sequence(;,List(
                UnaryNode(B,
                    BinaryNode(apply,
                        TokenString(id,foo),
                        Sequence(,,List(
                            BinaryNode(+,
                                TokenInt(constant,5),
                                BinaryNode(%,
                                    TokenInt(constant,1),
                                    TokenInt(constant,7)
                                )
                            ),
                            BinaryNode(!=,
                                TokenInt(constant,4),
                                BinaryNode(+,
                                    TokenInt(constant,2),
                                    TokenInt(constant,2)
                                )
                            ),
                            BinaryNode(==,
                                TokenInt(constant,3),
                                BinaryNode(+,
                                    TokenInt(constant,3),
                                    TokenInt(constant,3))
                            )
                        ))
                    )
                ),
                BinaryNode(=,
                    TokenString(id,yy),
                    TokenInt(constant,21)
                ),
                BinaryNode(q,
                    Singleton(int),
                    BinaryNode(=,
                        TokenString(id,a),
                        TokenInt(constant,4)
                    )
                ),
                UnaryNode(return,
                    BinaryNode(=,
                        TokenString(id,a),
                        TokenInt(constant,10)
                    )
                ))
            )
        )
    )
))
